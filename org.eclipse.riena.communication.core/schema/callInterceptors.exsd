<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.riena.communication.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.riena.communication.core" id="callInterceptors" name="Call interceptors"/>
      </appInfo>
      <documentation>
         With a call interceptors it is possible to intercept a remote service call.
A interceptor must implement the same interface as the remote service and provide a public constructor with the services interface type as its single parameter. This parameter is the delegate for the chained service calls.
E.g.:
/**
 * Intercept the {@code IReceiver} service.
 */
public class MonitorReceiverInterceptor implements IReceiver {

	private final IReceiver delegate;

	public MonitorReceiverInterceptor(final IReceiver delegate) {
		this.delegate = delegate;
	}

	public boolean take(final long senderTime, final List&lt;Collectible&lt;?&gt;&gt; collectibles) {
		System.out.println(&quot;SenderTime:&quot; + senderTime + &quot;, collectibles&quot; + collectibles);
		return delegate.take(senderTime, collectibles);
	}

}

      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="callInterceptor"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="callInterceptor">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="preInterceptors" type="string">
            <annotation>
               <documentation>
                  a comma separated list of interceptor names that should be executed before this interceptor. A single &apos;*&apos; denotes that all other interceptors should be executed before this interceptor.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="postInterceptors" type="string">
            <annotation>
               <documentation>
                  a comma separated list of interceptor names that should be executed after this interceptor. A single &apos;*&apos; denotes that all other interceptors should be executed after this interceptor.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="serviceInterfaceClass" type="string" use="required">
            <annotation>
               <documentation>
                  The interface that the given interceptor has to implement
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="callInterceptorClass" type="string" use="required">
            <annotation>
               <documentation>
                  the interceptor that needs to implement the given &apos;serviceInterfaceClass&apos;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         4.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
