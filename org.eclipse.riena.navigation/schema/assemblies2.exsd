<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.riena.navigation" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.riena.navigation" id="org.eclipse.riena.navigation.navigationNode" name="navigationNode"/>
      </appInfo>
      <documentation>
         Defines how to create a node or a subtree in the application model tree.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
         <documentation>
            An Assembly is a building block for a part of your Riena application. It defines subapps, modulegroups, modules and submodules as a tree where each submodule has a controller and a view associated with it. Assemblies are very flexible and can either be constructed using this extension schema or by setting an assembler which is a java class that creates the navigation tree at runtime.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="assembly2"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  An optional identifier for the extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  A fully qualified identifier of the target extension point.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  An optional name for the extension.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="assembly2">
      <annotation>
         <documentation>
            Defines how to create a node or a subtree in the application model tree.
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="0" maxOccurs="1">
            <element ref="subapplication"/>
            <element ref="modulegroup"/>
            <element ref="module"/>
            <element ref="submodule"/>
            <element ref="custom"/>
         </choice>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  An optional identifier for the assembly
               </documentation>
            </annotation>
         </attribute>
         <attribute name="assembler" type="string" use="default" value="org.eclipse.riena.navigation.model.GenericNavigationAssembler">
            <annotation>
               <documentation>
                  An assembler that creates a node or a subtree for the navigation model tree.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.riena.navigation.INavigationAssembler"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="parentTypeId" type="string">
            <annotation>
               <documentation>
                  A typeId that is the parent of the subtree that is defined in this assembly. Once the subtree is created it will be added to the specified parentTypeId unless that is overwritten
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Contains the description of this navigation node that will be used in the plugin-editor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="autostartsequence" type="string">
            <annotation>
               <documentation>
                  Indicates if the nodes described by this assembly should be automatically created upon startup. The assembly with the lowest autostartsequence will be started first.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="subapplication">
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <choice>
               <element ref="modulegroup"/>
            </choice>
         </sequence>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Contains the description of this navigation node that will be used in the plugin-editor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Type part of the ID of the nodes created with this definition. When a subtree is defined it is the type ID of the root node.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="perspectiveId" type="string" use="required">
            <annotation>
               <documentation>
                  Must match the ID field of an &quot;org.eclipse.ui.perspectives&quot; extension. The default implementation is org.eclipse.riena.navigation.ui.swt.views.SubApplicationView.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.ui.perspectives/perspective/@id"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="modulegroup">
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <choice>
               <element ref="module"/>
            </choice>
         </sequence>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Contains the description of this navigation node that will be used in the plugin-editor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Type part of the ID of the nodes created with this definition. When a subtree is defined it is the type ID of the root node.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="module">
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <choice>
               <element ref="submodule"/>
               <element ref="assembly2"/>
            </choice>
         </sequence>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Contains the description of this navigation node that will be used in the plugin-editor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Type part of the ID of the nodes created with this definition. When a subtree is defined it is the type ID of the root node.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  id of icon to be displayed in navigation tree
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="closable" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Indicates if the module is closeable.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="submodule">
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="submodule"/>
         </sequence>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Contains the description of this navigation node that will be used in the plugin-editor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Type part of the ID of the nodes created with this definition. When a subtree is defined it is the type ID of the root node.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="viewId" type="string" use="required">
            <annotation>
               <documentation>
                  For the SWT-based Riena UI this is the ID of the view associated with the submodule. Must match the ID field of an &quot;org.eclipse.ui.view&quot; extension.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.ui.views/view/@id"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="controller" type="string">
            <annotation>
               <documentation>
                  A controller that controlles the UI widgets in the view through ridgets (see org.eclipse.riena.ui.ridgets.IRidget)
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.riena.ui.ridgets.controller.IController"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="sharedView" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Indicates whether the view is shared i.e. whether one instance of the view should be used for all submodule instances. Even for a shared view an individual controller instance will be created for each submodule node with its own set of ridgets. The default value is &quot;false&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  Icon to be displayed in navigation tree.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="selectable" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Indicates whether the view is selectable or not. An unselectable submodule can be used to group submodules. That means that in all cases an unselectable submodule should have child submodules (in order to make sense). Then clicking the unselectable submodules immediatelly forwards the focus to the first child.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="requiresPreparation" type="boolean">
            <annotation>
               <documentation>
                  Indicates whether the navigation node should be prepared after the sub module node is created. Preparation means that the controller is created (among other things).
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="custom">
      <annotation>
         <documentation>
            Node for custom elements in the navigation bar. A custom module needs to be defined by itself and not within a given navigation structure. Its parentTypeId must be a subapplication.
It must contain a view and can contain a controller for it.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Type part of the ID of the nodes created with this definition. When a subtree is defined it is the type ID of the root node.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Contains the description of this navigation node that will be used in the plugin-editor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="closable" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Indicates if the module is closeable.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="view" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="controller" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
